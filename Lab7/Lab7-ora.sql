insert into Storages(location,capacity,free_space) values ('Минск', 100, 80);
insert into Storages(location,capacity,free_space) values ('Гродно', 200, 100);
insert into Storages(location,capacity,free_space) values ('Гомель', 300, 200);
select * from StoredProducts;
insert into StoredProducts(customer_id,type_id,name,count,weight) values (1,1,'Молоко', 10,1);
insert into StoredProducts(customer_id,type_id,name,count,weight) values (1,1,'Хлеб', 10,1);
insert into StoredProducts(customer_id,type_id,name,count,weight) values (1,1,'Творог', 10,1);
select * from Storages;
select * from storages_storedproducts;
insert into storages_storedproducts(storage_id, product_id) values (2,2);
insert into storages_storedproducts(storage_id, product_id) values (3,3);
insert into storages_storedproducts(storage_id, product_id) values (4,4);
commit;
create table Report(
id NUMBER(10,0) GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1)   NOT NULL,
xml_data XMLTYPE
);
select * from Report;
select XMLElement("Storage", 
					XMLElement("location", s.location),
          XMLElement("capacity", s.capacity),
          XMLElement("free_space", s.free_space),
          XMLElement("product_id", sp.id),
          XMLElement("customer", sp.customer_id),
          XMLElement("type", sp.type_id),
          XMLElement("name", sp.name),
          XMLElement("weight", sp.weight))
from Storages s
inner join storages_storedproducts ssp on ssp.storage_id = s.id
inner join StoredProducts sp on sp.id = ssp.product_id;

create procedure InsertXML
as
begin
  insert into Report(xml_data)
  select XMLElement("Storage", 
					XMLElement("location", s.location),
          XMLElement("capacity", s.capacity),
          XMLElement("free_space", s.free_space),
          XMLElement("product_id", sp.id),
          XMLElement("customer", sp.customer_id),
          XMLElement("type", sp.type_id),
          XMLElement("name", sp.name),
          XMLElement("weight", sp.weight))
from Storages s
inner join storages_storedproducts ssp on ssp.storage_id = s.id
inner join StoredProducts sp on sp.id = ssp.product_id;
end
select extractvalue(xml_data, '/Storage/location') from Report;
select r.xml_data.GETSTRINGVAL() xml from Report r;

create index xml_index on Report(extractvalue(xml_data, '/storage/location'));

create procedure GetXmlDataReport(name in varchar2, result out varchar2)
is
begin
  select extractvalue(xml_data,'/Storage/'||name||'') xml
      into result from report r
      where r.id=2;
end;

declare 
  result varchar2(1000);
  name varchar2(300) := 'location';
begin
--  select extractvalue(xml_data,'/Storage/'||name||'') xml
--      into result from report r
--      where r.id=2;
  GetXmlDataReport('free_space',result);
  dbms_output.put_line(result);
end;